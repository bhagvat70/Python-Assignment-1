

/*  1.Create a C++ class College, with data members College Id, College Name, Establishment_year, University Name. Overload operators>> and << to accept and display 
College information.[15 Marks]         */

#include<iostream.h>
#include<conio.h>
class college{
	int clgid;
	char clgname[30];
	int esta_year;
	char uni_name[30];
	public :
		friend istream &operator >> (istream &in, college &c){
			cout<<"Enter College ID : "; in>>c.clgid;
			cout<<"Enter College Name : "; in>>c.clgname;
			cout<<"Enter Establishment Year : "; in>>c.esta_year;
			cout<<"Enter University Name : "; in>>c.uni_name; 
		}
		
		friend ostream &operator << (ostream &out, college &c){
			cout<<"\nCollege Details :";
			out<<"\nCollege ID : "<<c.clgid;
			out<<"\nCollege Name : "<<c.clgname;
			out<<"\nEstablishment Year : "<<c.esta_year;
			out<<"\nUniversity Name : "<<c.uni_name;
		}
};

int main(){
    clrscr();
	college c;
	cin>>c;
	cout<<c;
	return 0;
}


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*2. Create a base class Travels with data members T no, Company Name. Derive a class Route with data members Route id, Source, and Destination 
from Travels class. Also derive a class Reservation with data members Number of Seats, Travels Class, Fare, and Travel Date from Route. Write a
 C++ program to perform following necessary member functions:
i. Accept details of ‘n’ reservations.
ii. Display details of all reservations.
iii. Display reservation details of a specified Date.[25 Marks]          */


#include <iostream.h>
#include <conio.h>
#include <string.h>
#include <stdlib.h>  // For exit()



class Travels {
protected:
    int Tno;
    char CompanyName[50];

public:
    void acceptTravels() {
        cout << "Enter Travel Number: ";
        cin >> Tno;
        cout << "Enter Company Name: ";
        cin.ignore();
        cin.getline(CompanyName, 50);
    }

    void displayTravels() {
        cout << "Travel No: " << Tno << ", Company: " << CompanyName << endl;
    }
};

class Route : public Travels {
protected:
    int RouteID;
    char Source[50], Destination[50];

public:
    void acceptRoute() {
        acceptTravels();
        cout << "Enter Route ID: ";
        cin >> RouteID;
        cout << "Enter Source: ";
        cin.ignore();
        cin.getline(Source, 50);
        cout << "Enter Destination: ";
        cin.getline(Destination, 50);
    }

    void displayRoute() {
        displayTravels();
        cout << "Route ID: " << RouteID << ", Source: " << Source << ", Destination: " << Destination << endl;
    }
};

class Reservation : public Route {
private:
    int NumSeats;
    char TravelClass[20];
    float Fare;
    char TravelDate[15];

public:
    void acceptReservation() {
        acceptRoute();
        cout << "Enter Number of Seats: ";
        cin >> NumSeats;
        cout << "Enter Travel Class: ";
        cin.ignore();
        cin.getline(TravelClass, 20);
        cout << "Enter Fare: ";
        cin >> Fare;
        cout << "Enter Travel Date (DD/MM/YYYY): ";
        cin.ignore();
        cin.getline(TravelDate, 15);
    }

    void displayReservation() {
        displayRoute();
        cout << "Seats: " << NumSeats << ", Class: " << TravelClass << ", Fare: " << Fare << ", Date: " << TravelDate << endl;
    }

    char* getDate() {
        return TravelDate;
    }
};

int main() {
    int n, choice;
    char searchDate[15];

    clrscr();  

    cout << "Enter number of reservations: ";
    cin >> n;

    Reservation *res = new Reservation[n];  

    for (int i = 0; i < n; i++) {
        cout << "\nEnter details for reservation " << i + 1 << ":\n";
        res[i].acceptReservation();
    }

    do {
        cout << "\nMenu:";
        cout << "\n1. Display all reservations";
        cout << "\n2. Display reservations for a specific date";
        cout << "\n3. Exit";
        cout << "\nEnter your choice: ";
        cin >> choice;

        switch (choice) {
        case 1:
            cout << "\nReservation Details:\n";
            for (int i = 0; i < n; i++) {
                cout << "\nReservation " << i + 1 << ":\n";
                res[i].displayReservation();
            }
            break;

        case 2:
            cout << "Enter Travel Date to search (DD/MM/YYYY): ";
            cin.ignore();
            cin.getline(searchDate, 15);

            cout << "\nReservations on " << searchDate << ":\n";
	    for (i = 0; i < n; i++) {
                if (strcmp(res[i].getDate(), searchDate) == 0) {
                    res[i].displayReservation();
                }
            }
            break;

        case 3:
            cout << "Exiting...";
            break;

        default:
            cout << "Invalid choice! Try again.\n";
        }
    } while (choice != 3);

    delete[] res;  
    getch();       
    return 0;
}








--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*           */

<!DOCTYPE html>
<html>
<head>
    <title>AJAX Factorial</title>
    <script>
        function getFactorial() {
            let num = document.getElementById("number").value;

            let xhr = new XMLHttpRequest();
            xhr.open("GET", "slip27_a.php?num=" + num, true);
            xhr.onload = function () {
                document.getElementById("result").innerHTML = "Factorial: " + this.responseText;
            };
            xhr.send();
        }
    </script>
</head>
<body>
    <h2>Factorial Calculator</h2>
    <input type="number" id="number" placeholder="Enter a number" min="0">
    <button onclick="getFactorial()">Calculate</button>
    <p id="result"></p>
</body>
</html>


<?php
$num = isset($_GET['num']) ? $_GET['num'] : '';

$num = (int)$num;

if ($num < 0) {
    echo "Invalid input. Enter a non-negative number.";
} else {
    $fact = 1;
    for ($i = 1; $i <= $num; $i++) {
        $fact *= $i;
    }
    echo $fact;
}
?>










--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*           */
